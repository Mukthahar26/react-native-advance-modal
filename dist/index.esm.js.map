{"version":3,"file":"index.esm.js","sources":["../src/helpers/helper.ts","../src/components/advance-modal/styles.ts","../src/components/advance-modal/index.tsx"],"sourcesContent":["import { Dimensions, ViewStyle, StyleProp, Animated } from \"react-native\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\ntype ModalType = \"center\" | \"bottom\" | \"right\" | \"left\";\n\nexport const getModalStyle = (\n  type: ModalType,\n  translateValue: Animated.Value,\n  animationStyle?: (translateValue: Animated.Value) => StyleProp<ViewStyle>\n): {\n  positionStyle: StyleProp<ViewStyle>;\n  transformStyle: StyleProp<ViewStyle>;\n} => {\n  let positionStyle: StyleProp<ViewStyle> = {};\n  let transformStyle: StyleProp<ViewStyle> = {};\n\n  // Modal position styles\n  switch (type) {\n    case \"center\":\n      positionStyle = {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: [{ translateX: -width * 0.4 }, { translateY: -200 / 2 }],\n        width: \"80%\",\n        minHeight: \"5%\",\n        borderRadius: 8,\n      };\n      transformStyle = { opacity: translateValue };\n      break;\n    case \"bottom\":\n      positionStyle = {\n        position: \"absolute\",\n        bottom: 0,\n        alignSelf: \"center\",\n        width: \"100%\",\n        minHeight: \"5%\",\n        borderTopLeftRadius: 8,\n        borderTopRightRadius: 8,\n      };\n      transformStyle = {\n        transform: [\n          {\n            translateY: translateValue.interpolate({\n              inputRange: [0, 1],\n              outputRange: [height, 0],\n            }),\n          },\n        ],\n      };\n      break;\n    case \"right\":\n      positionStyle = {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        height: \"100%\",\n        width: \"70%\",\n      };\n      transformStyle = {\n        transform: [\n          {\n            translateX: translateValue.interpolate({\n              inputRange: [0, 1],\n              outputRange: [width, 0],\n            }),\n          },\n        ],\n      };\n      break;\n    case \"left\":\n      positionStyle = {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        height: \"100%\",\n        width: \"70%\",\n      };\n      transformStyle = {\n        transform: [\n          {\n            translateX: translateValue.interpolate({\n              inputRange: [0, 1],\n              outputRange: [-width, 0],\n            }),\n          },\n        ],\n      };\n      break;\n    default:\n      positionStyle = {};\n      transformStyle = {};\n      break;\n  }\n\n  // Apply the custom animation style if provided\n  if (animationStyle) {\n    transformStyle = animationStyle(translateValue);\n  }\n\n  return { positionStyle, transformStyle };\n};\n","import { StyleSheet } from \"react-native\";\n\nconst styles = StyleSheet.create({\n  overlay: {\n    flex: 1,\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n  card: {\n    backgroundColor: \"white\",\n    padding: 16,\n  },\n});\n\nexport default styles;\n","import React, {useEffect, useState} from 'react';\nimport {Modal, Pressable, Animated} from 'react-native';\nimport {getModalStyle} from '../../helpers/helper';\nimport styles from './styles';\nimport {CustomModalProps} from '../../props';\n\nconst CustomModal: React.FC<CustomModalProps> = ({\n  type,\n  visible,\n  onClose,\n  cardStyle,\n  overlayStyle,\n  animationDuration = 300,\n  animationStyle,\n  children,\n}) => {\n  const [modalVisible, setModalVisible] = useState(visible);\n  const translateValue = useState(new Animated.Value(0))[0];\n  const {positionStyle, transformStyle} = getModalStyle(\n    type,\n    translateValue,\n    animationStyle,\n  );\n\n  useEffect(() => {\n    if (visible) {\n      setModalVisible(true);\n      Animated.timing(translateValue, {\n        toValue: 1,\n        duration: animationDuration,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(translateValue, {\n        toValue: 0,\n        duration: animationDuration,\n        useNativeDriver: true,\n      }).start(() => setModalVisible(false));\n    }\n  }, [visible, translateValue, animationDuration]);\n\n  if (!modalVisible) return null;\n\n  return (\n    <Modal transparent visible={modalVisible} animationType=\"none\">\n      <Pressable style={[styles.overlay, overlayStyle]} onPress={onClose} />\n      <Animated.View\n        style={[styles.card, cardStyle, positionStyle, transformStyle]}>\n        {children}\n      </Animated.View>\n    </Modal>\n  );\n};\n\nexport default CustomModal;\n"],"names":["_a","Dimensions","get","width","height","styles","StyleSheet","create","overlay","flex","backgroundColor","card","padding","CustomModal","type","visible","onClose","cardStyle","overlayStyle","_b","animationDuration","animationStyle","children","_c","useState","modalVisible","setModalVisible","translateValue","Animated","Value","_d","positionStyle","transformStyle","position","top","left","transform","translateX","translateY","minHeight","borderRadius","opacity","bottom","alignSelf","borderTopLeftRadius","borderTopRightRadius","interpolate","inputRange","outputRange","right","getModalStyle","useEffect","timing","toValue","duration","useNativeDriver","start","React","createElement","Modal","transparent","animationType","Pressable","style","onPress","View"],"mappings":"qJAEM,IAAAA,EAAoBC,EAAWC,IAAI,UAAjCC,EAAKH,EAAAG,MAAEC,WCATC,EAASC,EAAWC,OAAO,CAC/BC,QAAS,CACPC,KAAM,EACNC,gBAAiB,sBAEnBC,KAAM,CACJD,gBAAiB,QACjBE,QAAS,MCHPC,EAA0C,SAACb,OAC/Cc,EAAId,EAAAc,KACJC,EAAOf,EAAAe,QACPC,EAAOhB,EAAAgB,QACPC,EAASjB,EAAAiB,UACTC,iBACAC,EAAAnB,EAAAoB,kBAAAA,OAAoB,IAAAD,EAAA,IAAGA,EACvBE,EAAcrB,EAAAqB,eACdC,EAAQtB,EAAAsB,SAEFC,EAAkCC,EAAST,GAA1CU,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAiBH,EAAS,IAAII,EAASC,MAAM,IAAI,GACjDC,EFZqB,SAC3BhB,EACAa,EACAN,GAKA,IAAIU,EAAsC,CAAA,EACtCC,EAAuC,CAAA,EAG3C,OAAQlB,GACN,IAAK,SACHiB,EAAgB,CACdE,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,CAAC,CAAEC,WAAqB,IAARlC,GAAe,CAAEmC,YAAY,MACxDnC,MAAO,MACPoC,UAAW,KACXC,aAAc,GAEhBR,EAAiB,CAAES,QAASd,GAC5B,MACF,IAAK,SACHI,EAAgB,CACdE,SAAU,WACVS,OAAQ,EACRC,UAAW,SACXxC,MAAO,OACPoC,UAAW,KACXK,oBAAqB,EACrBC,qBAAsB,GAExBb,EAAiB,CACfI,UAAW,CACT,CACEE,WAAYX,EAAemB,YAAY,CACrCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC5C,EAAQ,QAK9B,MACF,IAAK,QACH2B,EAAgB,CACdE,SAAU,WACVC,IAAK,EACLe,MAAO,EACP7C,OAAQ,OACRD,MAAO,OAET6B,EAAiB,CACfI,UAAW,CACT,CACEC,WAAYV,EAAemB,YAAY,CACrCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC7C,EAAO,QAK7B,MACF,IAAK,OACH4B,EAAgB,CACdE,SAAU,WACVC,IAAK,EACLC,KAAM,EACN/B,OAAQ,OACRD,MAAO,OAET6B,EAAiB,CACfI,UAAW,CACT,CACEC,WAAYV,EAAemB,YAAY,CACrCC,WAAY,CAAC,EAAG,GAChBC,YAAa,EAAE7C,EAAO,QAK9B,MACF,QACE4B,EAAgB,CAAA,EAChBC,EAAiB,CAAA,EASrB,OAJIX,IACFW,EAAiBX,EAAeM,IAG3B,CAAEI,cAAaA,EAAEC,eAAcA,EACxC,CEpF0CkB,CACtCpC,EACAa,EACAN,GAHKU,EAAaD,EAAAC,cAAEC,mBAuBtB,OAjBAmB,GAAU,WACJpC,GACFW,GAAgB,GAChBE,EAASwB,OAAOzB,EAAgB,CAC9B0B,QAAS,EACTC,SAAUlC,EACVmC,iBAAiB,IAChBC,SAEH5B,EAASwB,OAAOzB,EAAgB,CAC9B0B,QAAS,EACTC,SAAUlC,EACVmC,iBAAiB,IAChBC,OAAM,WAAM,OAAA9B,GAAgB,EAAM,GAExC,GAAE,CAACX,EAASY,EAAgBP,IAExBK,EAGHgC,EAAAC,cAACC,EAAK,CAACC,aAAW,EAAC7C,QAASU,EAAcoC,cAAc,QACtDJ,EAAAC,cAACI,EAAS,CAACC,MAAO,CAAC1D,EAAOG,QAASU,GAAe8C,QAAShD,IAC3DyC,EAACC,cAAA9B,EAASqC,KAAI,CACZF,MAAO,CAAC1D,EAAOM,KAAMM,EAAWc,EAAeC,IAC9CV,IAPmB,IAW5B"}